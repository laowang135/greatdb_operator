apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: greatdbpaxos-operator
  name: greatdbpaxos-validating
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 443
  type: ClusterIP

---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: greatdbpaxos-operator-valitaing-webhook
webhooks:
  - name: greatdbpaxos-valitaing-create.greatdb.com
    rules:
    - apiGroups:   ["greatdb.com"]
      apiVersions: ["v1alpha1"]
      operations:  ["CREATE"]
      resources:   ["greatdbpaxoses"]
    clientConfig:
      service:
        namespace: "default"
        name: "greatdbpaxos-validating"
        path: "/greatdbpaxos-validate-create"
      caBundle: ${CA_BUNDLE}
    admissionReviewVersions: [ "v1beta1" ]
    failurePolicy: "Fail"
    sideEffects: None
    timeoutSeconds: 10
  - name: greatdbpaxos-valitaing-update.greatdb.com
    rules:
    - apiGroups: [ "greatdb.com" ]
      apiVersions: [ "v1alpha1" ]
      operations: [ "UPDATE" ]
      resources: [ "greatdbpaxoses" ]
    clientConfig:
      service:
        namespace: "default"
        name: "greatdbpaxos-validating"
        path: "/greatdbpaxos-validate-update"
      caBundle: ${CA_BUNDLE}
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: "Fail"
    sideEffects: None
    timeoutSeconds: 10
  - name: greatdbbackup-valitaing-create.greatdb.com
    rules:
    - apiGroups:   ["greatdb.com"]
      apiVersions: ["v1alpha1"]
      operations:  ["CREATE"]
      resources:   ["greatdbbackuprecords"]
    clientConfig:
      service:
        namespace: "default"
        name: "greatdbpaxos-validating"
        path: "/greatdbbackup-validate-create"
      caBundle: ${CA_BUNDLE}
    admissionReviewVersions: [ "v1beta1" ]
    failurePolicy: "Fail"
    sideEffects: None
    timeoutSeconds: 10
  - name: greatdbbackup-valitaing-update.greatdb.com
    rules:
    - apiGroups: [ "greatdb.com" ]
      apiVersions: [ "v1alpha1" ]
      operations: [ "UPDATE" ]
      resources: [ "greatdbbackuprecords" ]
    clientConfig:
      service:
        namespace: "default"
        name: "greatdbpaxos-validating"
        path: "/greatdbbackup-validate-update"
      caBundle: ${CA_BUNDLE}
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: "Fail"
    sideEffects: None
    timeoutSeconds: 10
  - name: greatdbbackupschedule-valitaing-create.greatdb.com
    rules:
    - apiGroups:   ["greatdb.com"]
      apiVersions: ["v1alpha1"]
      operations:  ["CREATE"]
      resources:   ["greatdbbackupschedules"]
    clientConfig:
      service:
        namespace: "default"
        name: "greatdbpaxos-validating"
        path: "/greatdbbackupschedule-validate-create"
      caBundle: ${CA_BUNDLE}
    admissionReviewVersions: [ "v1beta1" ]
    failurePolicy: "Fail"
    sideEffects: None
    timeoutSeconds: 10
  - name: greatdbbackupschedule-valitaing-update.greatdb.com
    rules:
    - apiGroups: [ "greatdb.com" ]
      apiVersions: [ "v1alpha1" ]
      operations: [ "UPDATE" ]
      resources: [ "greatdbbackupschedules" ]
    clientConfig:
      service:
        namespace: "default"
        name: "greatdbpaxos-validating"
        path: "/greatdbbackupschedule-validate-update"
      caBundle: ${CA_BUNDLE}
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: "Fail"
    sideEffects: None
    timeoutSeconds: 10